<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ToolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>